services:
  - type: worker
    name: celery-worker
    region: ohio
    runtime: python
    plan: pro
    buildCommand: "pip install -r requirements.txt && playwright install"
    startCommand: "celery --app tasks worker --loglevel info"
    autoDeploy: true
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: OPENAI_API_TYPE
        fromService:
          name: app
          type: web
          envVarKey: OPENAI_API_TYPE
      - key: OPENAI_API_VERSION
        fromService:
          name: app
          type: web
          envVarKey: OPENAI_API_VERSION
      - key: OPENAI_API_BASE
        fromService:
          name: app
          type: web
          envVarKey: OPENAI_API_BASE
      - key: SERPAPI_API_KEY
        fromService:
          name: app
          type: web
          envVarKey: SERPAPI_API_KEY
      - key: OPENAI_API_KEY
        fromService:
          name: app
          type: web
          envVarKey: OPENAI_API_KEY
  - type: web
    name: app
    region: ohio
    runtime: python
    plan: pro
    buildCommand: "pip install -r requirements.txt && playwright install"
    startCommand: "gunicorn --timeout=300 --workers=3 app:app"
    autoDeploy: true
    envVars:
      - key: FLASK_SECRET_KEY
        generateValue: true
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: OPENAI_API_TYPE
        value: "azure"
      - key: OPENAI_API_VERSION
        value: "2023-07-01-preview"
      - key: OPENAI_API_BASE
        value: "https://faraday.openai.azure.com"
      - key: SERPAPI_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
  - type: web
    name: flower
    region: ohio
    plan: starter
    runtime: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery --app tasks flower --loglevel info --persistent=True"
    autoDeploy: true
    envVars:
      - key: FLOWER_BROKER_API # the flower docs say this is the env name, but the example uses CELERY_BROKER_URL... hmm?
        fromService:
          type: redis
          name: celery-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: celery-redis
          property: connectionString
      - key: FLOWER_PORT
        value: 10000
  - type: redis
    name: celery-redis
    region: ohio
    plan: starter
    maxmemoryPolicy: noeviction # recommended policy for queues
    ipAllowList:
      - source: 35.90.103.132/30
        description: retool1
      - source: 44.208.168.68/30
        description: retool2
