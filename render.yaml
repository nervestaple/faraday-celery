services:
  - type: worker
    name: celery-worker
    region: ohio
    runtime: python
    plan: pro
    buildCommand: "pip install -r requirements.txt && chmod +x playwright_setup.sh && ./playwright_setup.sh"
    startCommand: "playwright install chromium && celery --app tasks worker --loglevel info"
    autoDeploy: true
    scaling: # Autoscaling configuration
      minInstances: 1
      maxInstances: 5
      targetMemoryPercent: 60 # Optional if targetCPUPercent is set
      targetCPUPercent: 60 # Optional if targetMemory is set
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: OPENAI_API_TYPE
        fromService:
          name: app
          type: web
          envVarKey: OPENAI_API_TYPE
      - key: OPENAI_API_VERSION
        fromService:
          name: app
          type: web
          envVarKey: OPENAI_API_VERSION
      - key: OPENAI_API_BASE
        fromService:
          name: app
          type: web
          envVarKey: OPENAI_API_BASE
      - key: SERPAPI_API_KEY
        fromService:
          name: app
          type: web
          envVarKey: SERPAPI_API_KEY
      - key: OPENAI_API_KEY
        fromService:
          name: app
          type: web
          envVarKey: OPENAI_API_KEY
      - key: PLAYWRIGHT_BROWSERS_PATH
        fromService:
          name: app
          type: web
          envVarKey: PLAYWRIGHT_BROWSERS_PATH
      - key: LENNOX_EMAIL
        fromService:
          name: app
          type: web
          envVarKey: LENNOX_EMAIL
      - key: LENNOX_PASSWORD
        fromService:
          name: app
          type: web
          envVarKey: LENNOX_PASSWORD
      - key: ENVIRONMENT
        fromService:
          name: app
          type: web
          envVarKey: ENVIRONMENT
      - key: AWS_REGION
        fromService:
          name: app
          type: web
          envVarKey: AWS_REGION
      - key: AWS_S3_ACCESS_KEY_ID
        fromService:
          name: app
          type: web
          envVarKey: AWS_S3_ACCESS_KEY_ID
      - key: AWS_S3_SECRET_ACCESS_KEY
        fromService:
          name: app
          type: web
          envVarKey: AWS_S3_SECRET_ACCESS_KEY
      - key: AWS_S3_BUCKET_NAME
        fromService:
          name: app
          type: web
          envVarKey: AWS_S3_BUCKET_NAME
  - type: web
    name: app
    region: ohio
    runtime: python
    plan: pro
    buildCommand: "pip install -r requirements.txt && chmod +x playwright_setup.sh && ./playwright_setup.sh"
    startCommand: "playwright install chromium && gunicorn --timeout=300 --workers=$((2 * $(nproc) + 1)) app:app"
    autoDeploy: true
    scaling: # Autoscaling configuration
      minInstances: 1
      maxInstances: 5
      targetMemoryPercent: 60 # Optional if targetCPUPercent is set
      targetCPUPercent: 60 # Optional if targetMemory is set
    envVars:
      - key: FLASK_SECRET_KEY
        generateValue: true
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: OPENAI_API_TYPE
        value: "azure"
      - key: OPENAI_API_VERSION
        value: "2023-07-01-preview"
      - key: OPENAI_API_BASE
        value: "https://faraday.openai.azure.com"
      - key: SERPAPI_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: PLAYWRIGHT_BROWSERS_PATH
        value: "/opt/render/project/"
      - key: LENNOX_EMAIL
        value: "alex@faradaycareers.com"
      - key: LENNOX_PASSWORD
        sync: false
      - key: ENVIRONMENT
        value: "production"
      - key: AWS_REGION
        value: "us-east-1"
      - key: AWS_S3_ACCESS_KEY_ID
        value: "AKIA5KKIVM5R2PZTCEYQ"
      - key: AWS_S3_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_S3_BUCKET_NAME
        value: "faraday-warranty-files"
  - type: web
    name: flower
    region: ohio
    plan: starter
    runtime: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery --app tasks flower --loglevel info --persistent=True"
    autoDeploy: true
    envVars:
      - key: FLOWER_BROKER_API # the flower docs say this is the env name, but the example uses CELERY_BROKER_URL... hmm?
        fromService:
          type: redis
          name: celery-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: celery-redis
          property: connectionString
      - key: FLOWER_PORT
        value: 10000
  - type: redis
    name: celery-redis
    region: ohio
    plan: starter
    maxmemoryPolicy: noeviction # recommended policy for queues
    ipAllowList:
      - source: 35.90.103.132/30
        description: retool1
      - source: 44.208.168.68/30
        description: retool2
